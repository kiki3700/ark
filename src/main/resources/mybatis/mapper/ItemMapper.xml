<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.data.mapper.ItemMapper">

	<update id = 'mergeItem' parameterType = 'ItemDto'>
		MERGE INTO ITEM
		USING DUAL
			ON(id = #{id})
		WHEN MATCHED THEN
			UPDATE SET
				NAME = #{name}
				,IS_ACTIVE = #{isActive}
				,MARKET = #{market}
				,INDUSTRY = #{industry}
				,CORP_SIZE = #{corpSize}
		WHEN NOT MATCHED THEN
			INSERT(
				ID,
				NAME,
				IS_ACTIVE,
				CURRENCY_ID,
				MARKET,
				CATEGORY,
				INDUSTRY,
				CORP_SIZE,
				LISTING_DATE
			)
			VALUES(
				#{id},
				#{name},
				#{isActive},
				#{currencyId},
				#{market},
				#{category},
				#{industry},
				#{corpSize},
				#{listingDate}
				)
	</update>
	
	<update id ='updateMarketCap' parameterType = 'ItemDto'>
		UPDATE ITEM 
		SET
			LISTED_SHARE = #{listedShare},
			MARKET_CAP = #{marketCap}
		WHERE ID = #{id}
	</update>
	
	<update id= 'updateCorpCode' parameterType = 'HashMap'>
		UPDATE ITEM
		SET
		CORP_CODE = #{corpCode}
		WHERE
		ID = #{id}
	</update>
	
	<select id = 'selectItemList' parameterType = 'HashMap' resultType = 'ItemDto'>
		SELECT * FROM ITEM
		<where>
			<if test = 'isActive != null and isActive !=""'>
				AND IS_ACTIVE = #{isActive}
			</if>
			<if	test = 'id != null and id !=""'>
				AND id = #{id}
			</if>
			<if test = 'isCorpCode != null and isCorpCode != ""'>
				AND CORP_CODE IS NOT NULL
			</if>
			<if test = 'industry != null and industry != ""'>
				AND INDUSTRY = #{industry}
			</if>
		</where>
	</select>
	
	
	<insert id ='insertHistoryDataDtoBatch' parameterType = 'HistoryDataDto'>
		INSERT INTO HISTORY_DATA(
				id,
				trading_date,
				item_id,
				open,
				close,
				low,
				high,
				volume
				)
			VALUES	
				(
				TO_CHAR(#{tradingDate}, 'YYYYMMDD')||#{itemId},
				#{tradingDate},
				#{itemId},
				#{open},
				#{close},
				#{low},
				#{high},
				#{volume}
			)
	</insert>
	
	<insert id = 'mergeHistoryDataDto' parameterType = 'HistoryDataDto'>
	MERGE INTO HISTORY_DATA A
		USING DUAL
			ON(A.ITEM_ID = #{itemId} and A.trading_date = #{tradingDate})
		WHEN NOT MATCHED THEN
		INSERT (
			id,
			trading_date,
			item_id,
			open,
			close,
			low,
			high,
			volume
			)
		VALUES	
			(
			TO_CHAR(#{tradingDate}, 'YYYYMMDD')||#{itemId},
			#{tradingDate},
			#{itemId},
			#{open},
			#{close},
			#{low},
			#{high},
			#{volume}
		)
	</insert>
	

	
	<delete id="deleteHistoryData" parameterType='hashMap'>
		DELETE FROM HISTORY_DATA WHERE ITEM_ID = #{itemId}
	</delete>
	
</mapper> 	